{
  "name": "Hedge Payments",
  "description": "Process cryptocurrency and fiat payments, manage transactions, check balances, and handle KYC verification through Coinflow integration",
  "version": "1.0.0",
  "category": "finance",
  "icon": "https://your-api-domain.com/icon.png",
  "base_url": "https://your-api-domain.com/api",
  "authentication": {
    "type": "oauth2",
    "oauth2": {
      "authorization_url": "https://your-api-domain.com/api/auth/login",
      "token_url": "https://your-api-domain.com/api/auth/login",
      "refresh_url": "https://your-api-domain.com/api/auth/refresh",
      "scopes": {
        "payments:read": "View payment information",
        "payments:write": "Create and manage payments",
        "balance:read": "View account balance",
        "transactions:read": "View transaction history",
        "kyc:write": "Initiate KYC verification"
      }
    }
  },
  "functions": [
    {
      "name": "create_payment",
      "description": "Create a new payment transaction for cryptocurrency or fiat currency",
      "parameters": {
        "type": "object",
        "required": ["amount", "currency", "customerEmail"],
        "properties": {
          "amount": {
            "type": "number",
            "description": "Payment amount (must be positive)"
          },
          "currency": {
            "type": "string",
            "enum": ["USD", "EUR", "GBP", "BTC", "ETH", "USDC", "USDT"],
            "description": "Payment currency"
          },
          "customerEmail": {
            "type": "string",
            "description": "Customer email address"
          },
          "customerName": {
            "type": "string",
            "description": "Customer full name"
          },
          "description": {
            "type": "string",
            "description": "Payment description or memo"
          }
        }
      },
      "returns": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "endpoint": {
        "method": "POST",
        "path": "/payments"
      }
    },
    {
      "name": "get_payment",
      "description": "Retrieve details of a specific payment by ID",
      "parameters": {
        "type": "object",
        "required": ["paymentId"],
        "properties": {
          "paymentId": {
            "type": "string",
            "description": "Unique payment identifier"
          }
        }
      },
      "endpoint": {
        "method": "GET",
        "path": "/payments/{paymentId}"
      }
    },
    {
      "name": "get_balance",
      "description": "Check account balance for a specific currency or all currencies",
      "parameters": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "enum": ["USD", "EUR", "GBP", "BTC", "ETH", "USDC", "USDT"],
            "description": "Currency to check balance for (optional)"
          }
        }
      },
      "endpoint": {
        "method": "GET",
        "path": "/balance"
      }
    },
    {
      "name": "get_transactions",
      "description": "Retrieve transaction history with optional filtering",
      "parameters": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Page number (default: 1)"
          },
          "limit": {
            "type": "integer",
            "description": "Items per page (default: 20, max: 100)"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "completed", "failed", "cancelled", "refunded"],
            "description": "Filter by transaction status"
          },
          "startDate": {
            "type": "string",
            "description": "Start date in ISO format"
          },
          "endDate": {
            "type": "string",
            "description": "End date in ISO format"
          },
          "currency": {
            "type": "string",
            "description": "Filter by currency"
          }
        }
      },
      "endpoint": {
        "method": "GET",
        "path": "/transactions"
      }
    },
    {
      "name": "refund_payment",
      "description": "Process a refund for a completed payment",
      "parameters": {
        "type": "object",
        "required": ["paymentId", "reason"],
        "properties": {
          "paymentId": {
            "type": "string",
            "description": "Payment ID to refund"
          },
          "amount": {
            "type": "number",
            "description": "Refund amount (partial or full)"
          },
          "reason": {
            "type": "string",
            "description": "Reason for refund"
          }
        }
      },
      "endpoint": {
        "method": "POST",
        "path": "/payments/{paymentId}/refund"
      }
    },
    {
      "name": "initiate_kyc",
      "description": "Start the KYC (Know Your Customer) verification process for a user",
      "parameters": {
        "type": "object",
        "required": ["userId", "firstName", "lastName", "email", "dateOfBirth", "nationality"],
        "properties": {
          "userId": {
            "type": "string",
            "description": "User identifier"
          },
          "firstName": {
            "type": "string",
            "description": "First name"
          },
          "lastName": {
            "type": "string",
            "description": "Last name"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of birth (YYYY-MM-DD)"
          },
          "nationality": {
            "type": "string",
            "description": "Nationality (2-letter country code)"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number with country code"
          }
        }
      },
      "endpoint": {
        "method": "POST",
        "path": "/kyc/initiate"
      }
    },
    {
      "name": "get_kyc_status",
      "description": "Check the KYC verification status for a user",
      "parameters": {
        "type": "object",
        "required": ["userId"],
        "properties": {
          "userId": {
            "type": "string",
            "description": "User identifier"
          }
        }
      },
      "endpoint": {
        "method": "GET",
        "path": "/kyc/status/{userId}"
      }
    },
    {
      "name": "create_payout",
      "description": "Create a payout to withdraw funds",
      "parameters": {
        "type": "object",
        "required": ["amount", "currency", "destination", "destinationType"],
        "properties": {
          "amount": {
            "type": "number",
            "description": "Payout amount"
          },
          "currency": {
            "type": "string",
            "enum": ["USD", "EUR", "GBP", "BTC", "ETH", "USDC", "USDT"],
            "description": "Payout currency"
          },
          "destination": {
            "type": "string",
            "description": "Destination address or account"
          },
          "destinationType": {
            "type": "string",
            "enum": ["bank_account", "crypto_wallet", "paypal"],
            "description": "Type of destination"
          }
        }
      },
      "endpoint": {
        "method": "POST",
        "path": "/balance/payout"
      }
    }
  ],
  "rate_limits": {
    "requests_per_minute": 100,
    "burst_limit": 120
  },
  "error_codes": {
    "400": "Bad Request - Invalid parameters",
    "401": "Unauthorized - Invalid or missing authentication",
    "403": "Forbidden - Insufficient permissions",
    "404": "Not Found - Resource not found",
    "429": "Too Many Requests - Rate limit exceeded",
    "500": "Internal Server Error",
    "502": "External Service Error - Coinflow API error"
  },
  "use_cases": [
    "Process cryptocurrency payments (BTC, ETH, USDC, USDT)",
    "Accept fiat currency payments (USD, EUR, GBP)",
    "Check account balances across multiple currencies",
    "View detailed transaction history",
    "Process refunds for completed payments",
    "Complete KYC verification for compliance",
    "Create payouts to bank accounts or crypto wallets",
    "Monitor payment status in real-time"
  ],
  "privacy_policy": "https://your-api-domain.com/privacy",
  "terms_of_service": "https://your-api-domain.com/terms",
  "support_contact": {
    "email": "jacksonfitzgerald25@gmail.com",
    "documentation": "https://your-api-domain.com/docs"
  }
}
